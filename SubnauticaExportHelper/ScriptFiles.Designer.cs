//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubnauticaExportHelper {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ScriptFiles {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ScriptFiles() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SubnauticaExportHelper.ScriptFiles", typeof(ScriptFiles).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fileFormatVersion: 2
        ///guid: {1}
        ///folderAsset: yes
        ///DefaultImporter:
        ///  externalObjects: {}
        ///  userData: 
        ///  assetBundleName: {2}
        ///  assetBundleVariant: 
        ///.
        /// </summary>
        internal static string AssetBundleMeta {
            get {
                return ResourceManager.GetString("AssetBundleMeta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   m_Name: CameraScannerRoom
        ///  m_TagString: Untagged
        ///  m_Icon: {fileID: 0}
        ///  m_NavMeshLayer: 0
        ///  m_StaticEditorFlags: 0
        ///  m_IsActive: 1.
        /// </summary>
        internal static string CameraScannerRoomPattern {
            get {
                return ResourceManager.GetString("CameraScannerRoomPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   m_Name: CameraScannerRoom
        ///  m_TagString: Untagged
        ///  m_Icon: {fileID: 0}
        ///  m_NavMeshLayer: 0
        ///  m_StaticEditorFlags: 0
        ///  m_IsActive: 0.
        /// </summary>
        internal static string CameraScannerRoomReplacement {
            get {
                return ResourceManager.GetString("CameraScannerRoomReplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		[SpecialName]
        ///		Transform IVoxelandChunk2.get_transform()
        ///		{
        ///			return base.transform;
        ///		}
        ///
        ///		[SpecialName]
        ///		GameObject IVoxelandChunk2.get_gameObject()
        ///		{
        ///			return base.gameObject;
        ///		}.
        /// </summary>
        internal static string ClipmapChunkPattern {
            get {
                return ResourceManager.GetString("ClipmapChunkPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using UnityEngine;
        ///
        ///public static class EditorModifications
        ///{
        ///    public const bool matchFixedTimeToDeltaTime = false;
        ///
        ///    public static Resolution desktopResolution =&gt; Screen.resolutions.GetLast();
        ///
        ///    public static void SetFadeAmount(this Renderer renderer, float fadeAmount)
        ///    {
        ///        Material material = renderer.material;
        ///        material.color = new Color(material.color.r, material.color.g, material.color.b, fadeAmount);
        ///    }
        ///
        ///    public static GameObject Instantiate(GameObject pref [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EditorModifications {
            get {
                return ResourceManager.GetString("EditorModifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;dependencies&quot;: {
        ///    &quot;com.unity.assetbundlebrowser&quot;: &quot;1.7.0&quot;,
        ///    &quot;com.unity.ext.nunit&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.ide.rider&quot;: &quot;1.1.4&quot;,
        ///    &quot;com.unity.package-manager-ui&quot;: &quot;2.2.0&quot;,
        ///    &quot;com.unity.test-framework&quot;: &quot;1.0.13&quot;,
        ///    &quot;com.unity.ugui&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.modules.ai&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.modules.androidjni&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.modules.animation&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.modules.assetbundle&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.modules.audio&quot;: &quot;1.0.0&quot;,
        ///    &quot;com.unity.modules.cloth&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string manifest {
            get {
                return ResourceManager.GetString("manifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using UnityEngine;
        ///
        ///public static class MeshExtension
        ///{
        ///    private static T[] ParseArray&lt;T&gt;(T[] array, int length, int offset)
        ///    {
        ///        if (array == null)
        ///            length = 0;
        ///        else if (length &gt; array.Length)
        ///            length = array.Length;
        ///
        ///        T[] returnArray = new T[length];
        ///
        ///        for (int i = 0; i &lt; length; i++)
        ///        {
        ///            returnArray[i] = array[i + offset];
        ///        }
        ///
        ///        return returnArray;
        ///    }
        ///
        ///    public static void SetVertices(this Mes [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MeshExtension {
            get {
                return ResourceManager.GetString("MeshExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Gendarme;
        ///
        ///namespace UnityEngine.PostProcessing
        ///{
        ///    [SuppressMessage(&quot;Subnautica.Rules&quot;, &quot;AvoidBoxingRule&quot;)]
        ///    public abstract class PostProcessingComponent&lt;T&gt; : PostProcessingComponentBase
        ///        where T : PostProcessingModel
        ///    {
        ///        public T model { get; internal set; }
        ///
        ///        public virtual void Init(PostProcessingContext pcontext, T pmodel)
        ///        {
        ///            this.context = pcontext;
        ///            this.model = pmodel;
        ///        }
        ///
        ///        public override PostProcessingM [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PostProcessingComponent {
            get {
                return ResourceManager.GetString("PostProcessingComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Gendarme;
        ///
        ///namespace UnityEngine.PostProcessing
        ///{
        ///    [SuppressMessage(&quot;Subnautica.Rules&quot;, &quot;AvoidBoxingRule&quot;)]
        ///    [SuppressMessage(&quot;Gendarme.Rules.Naming&quot;, &quot;AvoidRedundancyInTypeNameRule&quot;)]
        ///    public abstract class PostProcessingComponentBase
        ///    {
        ///        public PostProcessingContext context;
        ///
        ///        public virtual DepthTextureMode GetCameraFlags() =&gt; DepthTextureMode.None;
        ///
        ///        public abstract bool active { get; }
        ///
        ///        public virtual void OnEnable()
        ///        {
        ///        }
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PostProcessingComponentBase {
            get {
                return ResourceManager.GetString("PostProcessingComponentBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Gendarme;
        ///using UnityEngine.Rendering;
        ///
        ///namespace UnityEngine.PostProcessing
        ///{
        ///    [SuppressMessage(&quot;Subnautica.Rules&quot;, &quot;AvoidBoxingRule&quot;)]
        ///    public abstract class PostProcessingComponentCommandBuffer&lt;T&gt; : PostProcessingComponent&lt;T&gt;
        ///        where T : PostProcessingModel
        ///    {
        ///        public abstract CameraEvent GetCameraEvent();
        ///
        ///        public abstract string GetName();
        ///
        ///        public abstract void PopulateCommandBuffer(CommandBuffer cb);
        ///    }
        ///}.
        /// </summary>
        internal static string PostProcessingComponentCommandBuffer {
            get {
                return ResourceManager.GetString("PostProcessingComponentCommandBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Gendarme;
        ///
        ///namespace UnityEngine.PostProcessing
        ///{
        ///    [SuppressMessage(&quot;Subnautica.Rules&quot;, &quot;AvoidBoxingRule&quot;)]
        ///    public abstract class PostProcessingComponentRenderTexture&lt;T&gt; : PostProcessingComponent&lt;T&gt;
        ///        where T : PostProcessingModel
        ///    {
        ///        public virtual void Prepare(Material material)
        ///        {
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string PostProcessingComponentRenderTexture {
            get {
                return ResourceManager.GetString("PostProcessingComponentRenderTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %YAML 1.1
        ///%TAG !u! tag:unity3d.com,2011:
        ///--- !u!129 &amp;1
        ///PlayerSettings:
        ///  m_ObjectHideFlags: 0
        ///  serializedVersion: 18
        ///  productGUID: a4af415504e5c624eb6c97efe61b5336
        ///  AndroidProfiler: 0
        ///  AndroidFilterTouchesWhenObscured: 0
        ///  AndroidEnableSustainedPerformanceMode: 0
        ///  defaultScreenOrientation: 4
        ///  targetDevice: 2
        ///  useOnDemandResources: 0
        ///  accelerometerFrequency: 60
        ///  companyName: DefaultCompany
        ///  productName: Subnautica
        ///  defaultCursor: {fileID: 0}
        ///  cursorHotspot: {x: 0, y: 0}
        ///  m_Spla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProjectSettings {
            get {
                return ResourceManager.GetString("ProjectSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	public void Start()
        ///	{.
        /// </summary>
        internal static string SentrySDKPattern {
            get {
                return ResourceManager.GetString("SentrySDKPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	public void Start()
        ///	{
        ///		return;.
        /// </summary>
        internal static string SentrySDKReplacement {
            get {
                return ResourceManager.GetString("SentrySDKReplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		foreach (KeyValuePair&lt;int, PingInstance&gt; item in PingManager)
        ///		{
        ///			int key = item.Key;
        ///			PingInstance value = item.Value;
        ///			OnAdd(key, value);
        ///		}.
        /// </summary>
        internal static string uGUI_PingsPattern {
            get {
                return ResourceManager.GetString("uGUI_PingsPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		using (Dictionary&lt;int, PingInstance&gt;.Enumerator enumerator = PingManager.GetEnumerator())
        ///		{
        ///			while (enumerator.MoveNext())
        ///			{
        ///				KeyValuePair&lt;int, PingInstance&gt; current = enumerator.Current;
        ///				OnAdd(current.Key, current.Value);
        ///			}
        ///		}.
        /// </summary>
        internal static string uGUI_PingsReplacement {
            get {
                return ResourceManager.GetString("uGUI_PingsReplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	[SpecialName]
        ///	Transform ICanvasElement.get_transform()
        ///	{
        ///		return base.transform;
        ///	}.
        /// </summary>
        internal static string uGUI_PopupMessagePattern {
            get {
                return ResourceManager.GetString("uGUI_PopupMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	[SpecialName]
        ///	Transform IVoxelandChunk2.get_transform()
        ///	{
        ///		return base.transform;
        ///	}
        ///
        ///	[SpecialName]
        ///	GameObject IVoxelandChunk2.get_gameObject()
        ///	{
        ///		return base.gameObject;
        ///	}.
        /// </summary>
        internal static string VoxelandChunkPattern {
            get {
                return ResourceManager.GetString("VoxelandChunkPattern", resourceCulture);
            }
        }
    }
}
